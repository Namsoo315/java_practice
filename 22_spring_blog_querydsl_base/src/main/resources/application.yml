server:
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  application:
    name: blog
    version: 1.0.0
  profiles:
    active: dev   # dev, prod 선택 가능
  servlet:
    multipart:
      maxFileSize: 100MB # 파일 하나의 최대 크기
      maxRequestSize: 300MB  # 한 번에 최대 업로드 가능 용량

  # JPA
  jpa:
    hibernate:
      ddl-auto: validate
      # create, create-drop, update, validate, none
    show-sql: true
    properties:
      hibernate:
        # default_batch_fetch_size: 100
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        physical_naming_strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        jdbc.time_zone: UTC
    open-in-view: false


  # Spring Boot Admin Client 설정
  boot:
    admin:
      client:
        # Admin 서버 주소
        url: http://localhost:9090
        instance:
          name: blog
          # 서비스 접근 URL (리버스 프록시 사용 시 정확한 외부 URL 지정)
          service-url: http://localhost:8080
          # 액추에이터 베이스 URL
          management-base-url: http://localhost:8080
        enabled: false
  sql:
    init:
      encoding: UTF-8


# swagger
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    display-request-duration: true
    persist-authorization: true


# log
logging:
  level:
    root: info
    # Hibernate SQL
    org.hibernate.SQL: off
    org.hibernate.orm.jdbc.bind: trace
    org.hibernate.type.descriptor.sql: trace
    # Spring Web
    org.springframework.web: trace
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG

  pattern:
    console: "%d{HH:mm:ss} %-5level %logger{36} - %msg%n"


# actuator/info 에 노출할 정보
info:
  app:
    name: ${spring.application.name}
    description: Blog service (Actuator info)
    version: ${spring.application.version:1.0.0}
  runtime:
    profile: ${spring.profiles.active}
    java: ${java.runtime.version}
    jvmVendor: ${java.vendor}


# Actuator 노출 범위
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers,env,threaddump,heapdump,users
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true   # liveness/readiness
  info:
    env:
      enabled: true     # info.* 노출
    java:
      enabled: true
    os:
      enabled: true
    build:
      enabled: true
